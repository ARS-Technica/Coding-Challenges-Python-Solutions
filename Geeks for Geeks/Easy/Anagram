"""
Anagram
Easy
https://practice.geeksforgeeks.org/problems/anagram-1587115620/1/

Given two stringsaandbconsisting of lowercase characters. The task is to check
whether two given strings are an anagram of each other or not. An anagram of a
string is another string that contains the same characters, only the order of
characters can be different. For example, act and tac are an anagram of each other.

Example 1:

Input:a = geeksforgeeks, b = forgeeksgeeks
Output: YES
Explanation: Both the string have samecharacters with
same frequency. So, both are anagrams.
        
Example 2:

Input:a = allergy, b = allergic
Output: NO
Explanation:Characters in both the strings are 
not same, so they are not anagrams.


Your Task:
You don't need to read input or print anything. Your task is to complete the
function isAnagram() which takes the string a and string b as input parameter
and check if the two strings are an anagram of each other. The function returns
true if the strings are anagram else it returns false.

Note: In python, you have to return True or False.

Expected Time Complexity:O(|a|+|b|).
Expected Auxiliary Space:O(Number of distinct characters).

Note: |s| represents the length of string s.

Constraints:
1 ≤ |a|,|b| ≤ 105
"""

from collections import Counter


class Solution:
    def isAnagram(a,b):
        return Counter(a) == Counter(b)


if __name__ == "__main__":
    print(Solution.isAnagram('geeksforgeeks', 'forgeeksgeeks'))                   # YES
    print(Solution.isAnagram('allergy', 'allergic'))                              # NO


#%%


class Solution:
    def isAnagram(a,b):
        freq_a = {}
        freq_b = {}

        if len(a) == len(b) and set(a) == set(b):
            for char in a:
                if char in freq_a:
                    freq_a[char] += 1
                else:
                    freq_a[char] = 1
                    
            for char in b:
                if char in freq_b:
                    freq_b[char] += 1
                else:
                    freq_b[char] = 1

            if freq_a == freq_b:
                return True
        return False


if __name__ == "__main__":
    print(Solution.isAnagram('geeksforgeeks', 'forgeeksgeeks'))                   # YES
    print(Solution.isAnagram('allergy', 'allergic'))                              # NO


#%%


class Solution:
    def isAnagram(a,b):
        freq_a, freq_b = {}, {}
        
        def freq_dict(arr, dic):
            for char in arr:
                if char in dic:
                    dic[char] += 1
                else:
                    dic[char] = 1            
        
        if len(a) == len(b) and set(a) == set(b):
            freq_dict(a, freq_a)
            freq_dict(b, freq_b)

            if freq_a == freq_b:
                return True

        return False


if __name__ == "__main__":
    print(Solution.isAnagram('geeksforgeeks', 'forgeeksgeeks'))                   # YES
    print(Solution.isAnagram('allergy', 'allergic'))                              # NO


#%%

"""
Equilibrium Point
Easy
https://practice.geeksforgeeks.org/problems/equilibrium-point-1587115620/1/
Created on Tue Jun 28 05:23:01 2022

Given an array A of n positive numbers. The task is to find the first
Equilibium Point in the array. 
Equilibrium Point in an array is a position such that the sum of elements
before it is equal to the sum of elements after it.

Note: Retun the index of Equilibrium point. (1-based index)

Example 1:

Input: 
n = 5 
A[] = {1,3,5,2,2} 
Output: 3 
Explanation: For second test case 
equilibrium point is at position 3 
as elements before it (1+3) = 
elements after it (2+2). 
 

Example 2:

Input:
n = 1
A[] = {1}
Output: 1
Explanation:
Since its the only element hence
its the only equilibrium point.
 

Your Task:
The task is to complete the function equilibriumPoint() which takes the array and n as input parameters and returns the point of equilibrium. Return -1 if no such point exists.

Expected Time Complexity: O(n)
Expected Auxiliary Space: O(1)

Constraints:
1 <= n <= 106
1 <= A[i] <= 108
"""


class Solution:
    def equilibriumPoint(A, N):
        if N == 1:
            return N
        elif N == 2:
            return -1
        else:
            arr_total = sum(A)
            running_total = []
            temp = 0

            for n in A:
                temp += n
                running_total.append(temp)

            for i in range(1, (N-1)):
                left = (running_total[i] - A[i])
                right = (arr_total - running_total[i])
                            
                if left == right:
                    # 1-based index
                    return i + 1

        return - 1


if __name__ == "__main__":
    print(Solution.equilibriumPoint([1,3,5,2,2], 5))                        # 3
    print(Solution.equilibriumPoint([1], 1))                                # 1
    print(Solution.equilibriumPoint([20, 17, 42, 25, 32, 32, 30, 32, 37, 9, 2, 33, 31, 17, 14, 40, 9, 12, 36, 21, 8, 33, 6, 6, 10, 37, 12, 26, 21, 3], 30))             # 13


#%%








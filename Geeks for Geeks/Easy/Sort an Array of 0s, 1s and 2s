"""
Sort an array of 0s, 1s and 2s
Easy
https://practice.geeksforgeeks.org/problems/sort-an-array-of-0s-1s-and-2s4231/1/

Given an array of size N containing only 0s, 1s, and 2s; sort the array in ascending order.


Example 1:

Input: 
N = 5
arr[]= {0 2 1 2 0}
Output:
0 0 1 2 2
Explanation:
0s 1s and 2s are segregated 
into ascending order.

Example 2:

Input: 
N = 3
arr[] = {0 1 0}
Output:
0 0 1
Explanation:
0s 1s and 2s are segregated 
into ascending order.

Your Task:
You don't need to read input or print anything. Your task is to complete the 
function sort012() that takes an array arr and N as input parameters and sorts the array in-place.


Expected Time Complexity: O(N)
Expected Auxiliary Space: O(1)


Constraints:
1 <= N <= 10^6
0 <= A[i] <= 2
"""


class Solution:
    def sort012(arr,n):
        low = 0
        middle = 0
        high = len(arr) - 1
        
        while middle <= high:
            if arr[middle] == 0:
                arr[low], arr[middle] = arr[middle], arr[low]
                low += 1
                middle += 1
            elif arr[middle] == 1:
                middle += 1
            else:   #if arr[middle] == 2:
                arr[middle], arr[high] = arr[high], arr[middle]
                high -= 1

        return arr


if __name__ == "__main__":
    print(Solution.sort012([0, 2, 1, 2, 0], 5))                                 # 0 0 1 2 2
    print(Solution.sort012([0, 1, 0], 3))                                       # 0 0 1 


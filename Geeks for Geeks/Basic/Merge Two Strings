"""
Merge Two Strings
Basic
https://practice.geeksforgeeks.org/problems/merge-two-strings2736/1/

Given two strings S1 and S2 as input, the task is to merge them alternatively
i.e. the first character of S1 then the first character of S2 and so on till
the strings end.
NOTE: Add the whole string if other string is empty.

Example 1:

Input:
S1 = "Hello" S2 = "Bye"
Output: HBeylelo
Explanation: The characters of both the 
given strings are arranged alternatlively.

Example 2:

Input: 
S1 = "abc", S2 = "def"
Output: adbecf
Explanation: The characters of both the
given strings are arranged alternatlively.

Your Task:
You don't need to read input or print anything. Your task is to complete the function merge() which takes the strings S1 and S2 as input and returns the resultant string by merging both S1 and S2 alternatively starting from S1.


Expected Time Complexity: O(|S1| + |S2|).
Expected Auxiliary Space: O(1).


Constraints:
1<=|S1|, |S2| <=103
"""


class Solution:
    def merge(S1, S2):      
        return ''.join([char for tup in zip(list(S1), list(S2)) for char in tup])


if __name__ == "__main__":
    print(Solution.merge("abc", "def"))                                         # adbecf
    print(Solution.merge("Hello", "Bye"))                                       # HBeylelo

# Fails unless two strings are of equal length

#%%


class Solution:
    def merge(S1, S2):
        cutoff = max(len(S1), len(S2)) - min(len(S1), len(S2))
        zipped = ''.join([char for tup in zip(list(S1), list(S2)) for char in tup]) 
        if len(S1) > len(S2):
            return zipped + S1[(-1 * cutoff)::]
        elif len(S1) < len(S2):
            return zipped + S2[(-1 * cutoff)::]
        else:
            return zipped


if __name__ == "__main__":
    print(Solution.merge("abc", "def"))                                         # adbecf
    print(Solution.merge("Hello", "Bye"))                                       # HBeylelo


#%%


class Solution:
    def merge(S1, S2):      
        #return ''.join([char for tup in zip(list(S1), list(S2)) for char in tup])
       i = 0
       j = 0
       result = ""

       while i < len(S1) and j < len(S2):
          result += S1[i] + S2[j]
          i+=1
          j+=1

       while i < len(S1):
          result += S1[i]
          i += 1

       while j < len(S2):
          result += S2[j]
          j += 1

       return result


if __name__ == "__main__":
    print(Solution.merge("abc", "def"))                                         # adbecf
    print(Solution.merge("Hello", "Bye"))                                       # HBeylelo


#%%

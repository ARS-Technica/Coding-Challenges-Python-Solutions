"""
Magical String
Basic
https://practice.geeksforgeeks.org/problems/magical-string3653/1/

You are given a string S, convert it into a magical string.
A string can be made into a magical string if the alphabets are swapped in the
given manner: a->z or z->a, b->y or y->b, and so on.  


Note: All the alphabets in the string are in lowercase.


Example 1:

Input:
S = varun
Output: ezifm
Explanation:
Magical string of "varun" 
will be "ezifm" 
since v->e , a->z , 
r->i , u->f and n->m.


Example 2:

Input:
S = akshay
Output: zphszb
Explanation:
Magical string of "akshay" 
will be "zphszb" 
since a->z , k->p , s->h , 
h->s , a->z and y->b.


Your Task:
You don't need to read input or print anything. Your task is to complete the
function magicalString() which takes the string S and returns the magical string.


Expected Time Complexity: O(N)
Expected Auxiliary Space: O(1)
 
 
Constraints:
1<=Length of String<=100
"""


class Solution:
    def magicalString(S):
        alphabet = ['a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l',
                    'm', 'n', 'o', 'p', 'q','r','s','t','u','v','w','x','y','z']
        reverse_alphabet = ['z', 'y', 'x', 'w', 'v', 'u', 't', 's', 'r', 'q', 
                            'p', 'o', 'n', 'm', 'l', 'k', 'j',  'i', 'h', 'g', 'f', 'e', 'd', 'c', 'b', 'a'] 

        result = ''

        for idx in S:
            result += reverse_alphabet[alphabet.index(idx)]

        return result


if __name__ == "__main__":
    print(Solution.magicalString("varun"))                              # "ezifm"
    print(Solution.magicalString("akshay"))                             # "zphszb"


#%%


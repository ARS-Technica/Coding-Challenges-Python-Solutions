"""
Power of 2
Basic
https://practice.geeksforgeeks.org/problems/power-of-2-1587115620/1/ 

Given a non-negative integer N. The task is to check if N is a power of 2. More
formally, check if N can be expressed as 2x for some x.

Example 1:

Input: N = 1
Output: YES
Explanation:1 is equal to 2 
raised to 0 (20 = 1).

Example 2:

Input: N = 98
Output: NO
Explanation: 98 cannot be obtained
by any power of 2.

Your Task:Your task is to complete the function isPowerofTwo() which takes n
as a parameter and returns true or false by checking if the given number can be
represented as a power of two or not.

Expected Time Complexity:O(log N).
Expected Auxiliary Space:O(1).

Constraints:
0 ≤N ≤1018
"""


class Solution:
    def isPowerofTwo(n):
        return ((n**.5) % 1) == 0


if __name__ == "__main__":
    print(Solution.isPowerofTwo(1))                      # YES
    print(Solution.isPowerofTwo(98))                     # NO


# Wrong Answer !!! 
# Test Cases Passed: 12 / 100110

#%%


class Solution:
    def isPowerofTwo(n):
        if n == 0: return False
        if n == 1: return True
        elif n%2 != 0: return False
        return Solution.isPowerofTwo(n/2)
        #return Solution.isPowerofTwo(self, n/2)


if __name__ == "__main__":
    print(Solution.isPowerofTwo(1))                      # YES
    print(Solution.isPowerofTwo(98))                     # NO
    print(Solution.isPowerofTwo(549755813888))           # YES


# Passed

